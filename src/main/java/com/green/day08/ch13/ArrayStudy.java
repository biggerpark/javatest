package com.green.day08.ch13;

public class ArrayStudy {
    /*
    1.
    배열은 ❗❗같은 타입❗❗의 여러(많은)데이터를 묶어서 저장하기 위해 사용한다.

    배열을 사용하지 않는다면 데이터 수만큼 변수를 만들어야한다.
    ex)100개의 정수값을 저장해야 한다면 100개의 int 변수를 선언 및 초기화해야한다.
    int n1,int n2,int n3....n100까지

    하지만 배열을 사용하면 여러 데이터를 편하게 저장하고 가져올 수 있다.(read,write)

    2. ❗❗❗배열 만드는 방법❗❗❗
    1) int[] 변수명=new int[100]; -> 100개의 정수값을 저장할 수 있는 공간을 만들었다.

    2) String[] 변수명2=new String[100]-> 100개의 문자열을 저장할 수 있는 공간을 만들었다.


    3) double[] 변수명3=new double[100]-> 100개의 문자열을 저장할 수 있는 공간을 만들었다.

    ✨✨"int[] 변수명" 도 가능하고
         "int 변수명[]" 도 가능한데 "int[] 변수명" 만 사용하자.✨✨

     주의) int[] arr; -> 이것이 의미하는 바는 "int 배열(객체)" 의 주소값을 저장한다. 이 의미는 int 배열(객체)의 주소값만 저장할 수 있다.
     다른 타입의 배열의 주소값은 저장할 수 없다.

     3.
     [배열 쓰기]
     new int[100]: int 형의 공간이 100개가 만들어졌다. 각 공간은 int 값만 저장할 수 있다.
     new String[100]: String 형인 공간이 100개가 만들어졌따. 각 공간은 String 주소값만 저장할 수 있다.

     ex)
     int[] arr=new int[10];

     공간번호(index)는 무조건 0부터 시작
     공간번호(index) 마지막은 9가 된다.


     arr[0]=10; 첫번째 공간에 10을 대입,
     arr[1]=20; 두번째 공간에 20을 대입,

     arr[9]=100; 마지막 공간에 100을 대입

     4. [배열 읽기]
     System.out.println(arr[0]); //10
     System.out.println(arr[9]); //100

     초기화 하지 않은 공간은 디폴트값이 들어간다.(저장되어있다)
     숫자형은 기본값이 0, 레퍼런스타입은 null, boolean 은 false

     5. [배열의 크기]
     arr.length 는 자신의 공간의 크기값을 저장한 정수 상수

     (활용)
     어떤 크기의 배열이든 마지막 공간의 값을 사용하고 싶을 때는
     arr[arr.length-1] 이렇게 하면 된다.

     6. [배열 생성과 동시에 초기화]
     int[] arr2= {1,2,3,4,5}

     int[] arr3=new int[] {1,2,3,4,5}

     메소드에 파리미터로 방금 만든 배열을 보내고 싶을때,
     메소드명({1,2,3}); 이렇게는 호출이 안된다
     메소드명(new int[] {1,2,3}); 이렇게는 호출해야 한다.
     그치만 우회가 가능

     ?? 한번 더 보기
     int[] arr={1,2,3};
     메소드명(arr) 로 적으면 매개변수로 type 을 안적어줘도 불러올 수 있다.

     7. [배열과 반복문(for)의 궁합]








     */
}
