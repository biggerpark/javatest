package com.green.day05.ch07;

public class ObjectStudy {
    /*
    지금까지의 클래스는 main 메소드를 위치시키기 위한 용도로만 사용했다.
    main 메소드가 하는 역할을 나타내기 위한 네이밍(클래스명)으로 사용했다.
    즉, 객체지향을 위한 클래스를 만든 것은 아니다.
    자바 문법 학습을 위한 용도로만 사용을 했다.
    이제는 객체를 만들고 활용하기 위한 클래스를 만들것이다.


       클래스(class)=데이터(Data)+메소드(Method)
                     속성(명사)   + 메소드(동사)

       속성=멤버필드=전역변수 (다 같은 말)
       메소드=멤버메소드

       속성-데이터를 저장하기 위한 공간(전역 변수)


        클래스     vs     객체
        문서             실체(진짜)
        설계도
        붕어빵틀          붕어빵 틀로 만든 붕어빵

        ex)인간이란 객체 - 속성: 혈액형,생년월일,성별,국가,머리색 ..
                   - 메소드: 일어난다,소리지른다,잔다..

        우리가 클래스에 적는 내용은 이 객체가 만들어졌을 때 작동하는 방식을 적는 것이다.
        예를 들어, 이러이러한 데이터를 저장해라(속성), 이러이러한 데이터를 변경해라(메소드)


       클래스를 이용해서 객체(인스턴스)를 만든다. 이러한 행위를 객체화(인스턴스화)라고 한다.

       이러한 객체화는 new 키워드를 사용해 만든다.




       ❗ class 의 멤버필드와 멤버메소드에 static 이 붙냐, 안붙냐의 차이 ❗

       1) static 이 붙은 것들을 사용할때는 객체화를 하지 않는다.
       2) static 이 붙으면 무조건 메모리에 새겨진다. 그래서 객체화를 하지 않아도 Class 를 불러와 멤버필드와 멤버메소드를 이용할 수 있다.
       3) static 이 붙은 것들은 할당되는 메모리가 한 개이다.

       4)static 이 안 붙어있는것들은 메모리에 올려줘야 하기 때문에 new 를 써서 객체화를 한다.


       5) static 메소드는 인스턴스멤버필드(=static 이 붙지 않은 필드)와 쓸 수 없다. static 멤버 필드는 static 이 붙은 전역변수와만 사용할 수 있다.

       6)멤버필드에 static 이 안 붙어 있으면 꼭 객체화를 해주고 사용해야한다.

        7) static 멤버필드: 클래스 변수
               멤버메소드: 클래스 메소드
               (클래스 이름으로 사용할 수 있기 때문에 위 처럼 부른다)
               (✨객체화 과정이 필요없다)

           static 이 안붙은 멤버필드: 인스턴스 변수
                           멤버메소드: 인스턴스 메소드
                          (인스턴스 객체가 되어야만 쓸 수 있기 때문에 위 처럼 부른다)


        ❗ 객체화(=인스턴스화), 객체란? ❗

        1)new 옆에 객체화 하고 싶은 class 명을 적고 소괄호를 () 적는다. ()안에 들어가는거는 생성자로서 나중에 설명. 이를 객체화 한다고 표현

        2) 객체가 만들어지고 이 객체가 위치한 주소값이 참조변수에 새겨진다.
        ex) 우리 집이 객체이면, 집을 이용하고 싶으면 집 자체를 복사하는 것이 아니라, 집의 주소를 불러와 찾아가서 집 안의 다양한 속성과 메소드를 이용한다.

        3) 객체는 만들어지면 움직이지 않는다. 객체가 만들어지면 특정한 메모리에 눌러앉는다.

        4) ✨ 이 객체를 이용하고 싶으면 주소값이 새겨진 참조변수를 이용한다.

        5) 참조타입, 참조타입은 대문자로 시작한다. 위에서는 BankAccount 가 참조타입, ba가 참조변수이다. 참조변수이므로 다른 변수들처럼 선언,초기화를 해준다.

        6) 기본타입(Primitive Type)를 제외한 모든 변수는 참조변수(Reference Type)이다. 기본타입은 소문자로 시작했다. int,boolen, float 등 등

        7) ❗❗❗❗참조변수는 객체의 주소값을 저장한다.❗❗❗❗
          ex)Car abc;
          참조변수 abc 는 Car 객체 주소값만 담을 수 있다.(저장할 수 있다)

        8) 참조변수끼리의 ==비교는 주소값이 같은지 비교한다.

        9) ✨객체를 이용할때는 참조변수에다가 . 을 붙여 이용한다. 참조변수.인스턴스메소드, 참조변수.인스턴스변수 ..


     */



}
